<style lang="less" scoped>
  .box{
    width: 90%;
    margin: 50rpx auto 0rpx auto;
  }
  .goodsId{
    width: 100%;
    margin-bottom: 10rpx;
    height: 80rpx;
    font-size: 28rpx;
    text-align: center;
    line-height: 80rpx;
    border-bottom: 1rpx solid rgb(202, 202, 202);
  }
  .form{
    width: 100%;
    margin-bottom: 40rpx;
    .row{
      width: 100%;
      height: 80rpx;
      margin-bottom: 10rpx;
      border-bottom: 1rpx solid rgb(202, 202, 202);
      background-color: rgb(247, 247, 247);
    }
  }
  .title{
    display: block;
    float: left;
    height: 100%;
    width: 270rpx;
    font-size: 32rpx;
    font-weight: 400;
    line-height: 80rpx;
    color: rgb(104, 104, 104);
    padding-left: 30rpx;
  }
  .input{
    box-sizing: border-box;
    width: 375rpx;
    height: 100%;
    color: #4395ff;
    font-weight: 700;
    font-size: 32rpx;
    line-height: 80rpx;
    float: left;
    text-align: center;
    border-left: 1rpx solid rgb(202, 202, 202);
    border-right: 1rpx solid rgb(202, 202, 202);
    border-radius: 10rpx;
    input{
      width: 100%;
      height: 100%;
    }
    .disabled{
      background-color: rgb(204, 204, 204);
    }
  }
  .type>.active{
    background-color: #4395ff;
    color: #fff;
  }
  .type>button{
    width: 170rpx;
    height: 80%;
    margin-right: 10rpx;
    vertical-align: middle;
    border-radius: 5rpx;
    color: rgb(104, 104, 104);
  }
  .time{
    display: flex;
    justify-content: space-around;
    align-items: center;
    text{
      display: block;
      width: 100rpx;
      height: 60rpx;
      color: #4395ff;
      font-weight: 700;
      font-size: 32rpx;
      line-height: 60rpx;
      text-align: center;
    }
    button{
      width: 60rpx;
      height: 60rpx;
      padding: 0;
      border: 0;
    }
  }
  .time image{
    width: 100%;
    height: 100%;
  }
  .backAndsubmit{
    width: 100%;
    height: 80rpx;
    display: flex;
    justify-content: space-around;
    button{
      width: 300rpx;
      height: 80rpx;
      border: 1rpx solid #4395ff;
      border-radius: 10rpx;
    }
    navigator{
      width: 100%;
      height: 100%;
    }
  }
</style>

<template>
  <view>
    <navigatorBack :message.sync="page"></navigatorBack>
    <view class="container box">
      <view class="goodsId">{{rentData.id}}</view>
      <view class="form">
        <view class="row">
          <text class="title">{{m.price}}</text>
          <view class="input">
            <input id="price" type="text" class="disabled" value="{{rentData.price}}" disabled bindconfirm="binddata"/>
          </view>
        </view>
        <view class="row">
          <text class="title">{{m.type}}</text>
          <view class="input type">
            <button id="hour" size="mini" @tap="bindTypeTap" class="{{typeBtnClass[0]}}">{{m.hour}}</button>
            <button id="day" size="mini" @tap="bindTypeTap" class="{{typeBtnClass[1]}}">{{m.day}}</button>
          </view>
        </view>
        <view class="row">
          <text class="title">{{m.time}}</text>
          <view class="input time">
            <button id="sub" size="mini" @tap="bindTimeTap" hover-class="button-hover">
              <image src="../images/sub.png" />
            </button>
            <text class="time">{{rentData.time}}</text>
            <button id="add" size="mini" @tap="bindTimeTap" hover-class="button-hover">
              <image src="../images/add.png" />
            </button>
          </view>
        </view>
        <view class="row">
          <text class="title">{{m.name}}</text>
          <view class="input">
            <input id="name" bindconfirm="binddata" type="text" placeholder="{{m.placeholder}}"/>
          </view>
        </view>
        <view class="row">
          <text class="title">{{m.nationality}}</text>
          <view class="input">
            <input id="nationality" bindconfirm="binddata" type="text" placeholder="{{m.placeholder}}"/>
          </view>
        </view>
        <view class="row">
          <text class="title">{{m.passportNum}}</text>
          <view class="input">
            <input id="passportNum" bindconfirm="binddata" type="text" placeholder="{{m.placeholder}}"/>
          </view>
        </view>
        <view class="row">
          <text class="title">{{m.phone}}</text>
          <view class="input">
            <input id="phone" bindblur="binddata" type="number" placeholder="{{m.placeholder}}"/>
          </view>
        </view>
        <view class="row">
          <text class="title">{{m.email}}</text>
          <view class="input">
            <input id="email" bindconfirm="binddata" type="text" placeholder="{{m.placeholder}}"/>
          </view>
        </view>
      </view>
      <view class="backAndsubmit">
        <button hover-class="button-hover" @tap="navToHome">{{m.back}}</button>
        <button @tap="onSubmit" hover-class="button-hover">{{m.submit}}</button>
      </view>
    </view>
    <tabBar :list.sync="m" father="fix"></tabBar>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import api from '../api/api.js'
  import tip from '../utils/tip.js'
  import { getLang } from '../lang/index.js'
  import TabBar from '../components/tab-bar'
  import NavigatorBack from '../components/navigator-back'

  export default class Repair extends wepy.page {
    components = {
      tabBar: TabBar,
      navigatorBack: NavigatorBack
    }

    data = {
      // 语种
      language: '',
      // 静态文字
      m: {},
      page: '',
      rentData: {
        state: 'out',
        id: '1768S180623_0101900001',
        price: '300',
        type: 'Hour',
        time: 3,
        name: '',
        nationality: '',
        passportNum: '',
        phone: '',
        email: ''
      },
      typeBtnClass: ['active', '']
    }

    watch = {
      m(newValue, oldValue) {
        if(newValue.page){
          this.page = newValue.page
        }
        if(newValue.state === 'out已出租'){
          this.redirect()
        }
      }
    }

    methods = {
      navToHome(){
        wx.navigateTo({url:'home'})
      },
      // 租赁类型按钮点击事件，修改了类型、出租时长
      bindTypeTap(e) {
        if (e.target.id === 'day') {
          this.rentData.time = 1
          this.rentData.type = 'Day'
          this.typeBtnClass = ['', 'active']
        } else {
          this.rentData.time = 3
          this.rentData.type = 'Hour'
          this.typeBtnClass = ['active', '']
        }
      },

      // 出租时长增减按钮点击事件
      bindTimeTap(e) {
        if (e.target.id === 'sub' && this.rentData.time > 1) {
          this.rentData.time--
        } else if (e.target.id === 'add') {
          this.rentData.time++
        }
      },

      // input value绑定rentData处理函数
      binddata(e) {
        let value = e.detail.value
        switch (e.target.id) {
          case 'name':
            this.rentData.name = value
            break
          case 'nationality':
            this.rentData.nationality = value
            break
          case 'passportNum':
            this.rentData.passportNum = value
            break
          case 'phone':
            this.rentData.phone = value
            break
          case 'email':
            this.rentData.email = value
            break
        }
      },

      // 重定向回home页，并弹窗提示
      redirect() {
        wepy.redirectTo({
          url: 'home',
          success() {
            tip.alert('Goods rented')
          }
        })
      },

      // 提交
      onSubmit(){
        console.log(this.rentData)
      }      
    }

    async onLoad() {
      await getLang('fix', this)
    }
  }
</script>
